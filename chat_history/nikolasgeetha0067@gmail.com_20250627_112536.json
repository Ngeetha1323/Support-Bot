[["\ud83d\udc64 You", "get one fruit image"], ["\ud83e\udd16 AI", "and put it on the middle of the screen\nthen get another fruit image and put it next to the first one\nthen get another fruit image and put it next to the second one\nrepeat until you have 5 fruits in a row\nmake sure that the images don't overlap and are equally spaced\nthen write the name of each fruit under its image\nthen write the total number of fruits on the top left corner\nthen write the total number of fruits multiplied by 2 on the top right corner\n\nhow would you code this in Unity (C#)\n\nTo implement this in Unity using C#, follow the steps outlined below. This code assumes you have a few fruit images as `Sprite` assets in your Unity project and that you are placing them in a row using Unity's `UI` system (`Image` and `Text` components).\n\n---\n\n### \ud83e\uddf1 1. **Setup in Unity Editor**\n1. Create a new Unity UI Canvas.\n2. Create an empty GameObject under the Canvas called `FruitRow`.\n3. Create a `Prefab` or just reference in the script:\n   - A UI `Image` to display each fruit.\n   - A UI `Text` component for the fruit name.\n4. Prepare 5 `Sprite` fruit images in your project (e.g., Apple, Banana, etc.).\n\n---\n\n### \ud83e\uddfe 2. **C# Script: `FruitRowManager.cs`**\n\n```csharp\nusing UnityEngine;\nusing UnityEngine.UI;\n\npublic class FruitRowManager : MonoBehaviour\n{\n    public Sprite[] fruitSprites; // Assign fruit sprites in the inspector\n    public GameObject fruitPrefab; // Optional: a prefab with Image + Text\n    public Transform parentPanel; // Panel or empty transform to hold fruits\n    public Vector2 spacing = new Vector2(150, 0); // Adjust spacing\n\n    private Text topLeftText;\n    private Text topRightText;\n\n    void Start()\n    {\n        if (fruitSprites == null || fruitSprites.Length < 5)\n        {\n            Debug.LogError(\"Please assign at least 5 fruit sprites.\");\n            return;\n        }\n\n        CreateFruitRow();\n\n        // Create top-left and top-right text\n        topLeftText = CreateText(new Vector2(10, -10), TextAnchor.UpperLeft);\n        topRightText = CreateText(new Vector2(-10, -10), TextAnchor.UpperRight);\n\n        UpdateTopTexts();\n    }\n\n    void CreateFruitRow()\n    {\n        for (int i = 0; i < 5; i++)\n        {\n            // Create a new GameObject for the fruit\n            GameObject fruitGO = new GameObject(\"Fruit_\" + i);\n            fruitGO.transform.SetParent(parentPanel);\n\n            // Add Image component\n            Image fruitImage = fruitGO.AddComponent<Image>();\n            fruitImage.sprite = fruitSprites[i];\n\n            // Set size\n            RectTransform rect = fruitGO.GetComponent<RectTransform>();\n            rect.sizeDelta = new Vector2(100, 100); // Size of the fruit image\n\n            // Position\n            rect.anchoredPosition = new Vector2(i * spacing.x, 0);\n\n            // Add text below the image\n            GameObject textGO = new GameObject(\"FruitNameText\");\n            textGO.transform.SetParent(fruitGO.transform);\n\n            Text fruitText = textGO.AddComponent<Text>();\n            fruitText.text = fruitSprites[i].name;\n            fruitText.fontSize = 14;\n            fruitText.color = Color.black;\n\n            RectTransform textRect = fruitText.rectTransform;\n            textRect.anchoredPosition = new Vector2(0, -60); // Below the image\n            textRect.sizeDelta = new Vector2(100, 30);\n        }\n    }\n\n    Text CreateText(Vector2 anchoredPosition, TextAnchor anchor)\n    {\n        GameObject textGO = new GameObject(\"TopText\");\n        textGO.transform.SetParent(parentPanel);\n\n        Text txt = textGO.AddComponent<Text>();\n        txt.font = Resources.GetBuiltinResource<Font>(\"Arial.ttf\");\n        txt.fontSize = 20;\n        txt.alignment = anchor;\n        txt.rectTransform.sizeDelta = new Vector2(200, 40);\n        txt.rectTransform.anchoredPosition = anchoredPosition;\n        return txt;\n    }\n\n    void UpdateTopTexts()\n    {\n        int count = 5;\n        topLeftText.text = \"Total Fruits: \" + count;\n        topRightText.text = \"Count x2: \" + (count * 2);\n    }\n}\n```\n\n---\n\n### \ud83d\udee0 3. **How to Use**\n1. Create a Canvas in your scene.\n2. Create an empty GameObject under the Canvas and name it `ParentPanel`.\n3. Create a new script named `FruitRowManager` and paste the code.\n4. Attach the script to a GameObject like `Manager`.\n5. Assign:\n   - `fruitSprites`: Drag and drop 5 fruit sprites.\n   - `parentPanel`: Drag the `ParentPanel` GameObject here.\n6. Run the scene.\n\n---\n\n### \ud83d\udcdd Notes\n- You can make a prefab for each fruit item (Image + Text) to simplify management.\n- You can dynamically calculate spacing based on screen size if needed.\n- Ensure Canvas Scaler is used for responsiveness.\n\nLet me know if you'd like this done using Unity's **RectTransform** anchors or with **instantiated prefabs**."]]